{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0321d2b2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"toast\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString($props.message), 1 /* TEXT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_toDisplayString","$props","message"],"sources":["D:\\WEB\\project\\jingdong\\src\\components\\Toast.vue"],"sourcesContent":["<!-- 弹窗 -->\r\n<template>\r\n  <div class=\"toast\">{{ message }}</div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs } from 'vue'\r\nexport default {\r\n  props: ['message']\r\n}\r\nexport const useToastEffect = () => {\r\n  const toastData = reactive({\r\n    show: false,\r\n    toastMessage: ''\r\n  })\r\n  const showToast = (message) => {\r\n    toastData.show = true\r\n    toastData.toastMessage = message\r\n    setTimeout(() => {\r\n      toastData.show = false\r\n      toastData.toastMessage = ''\r\n    }, 2000)\r\n  }\r\n\r\n  const { show, toastMessage } = toRefs(toastData)\r\n  return { toastMessage, show, showToast }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.toast {\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 0.1rem;\r\n  background: rgba(0, 0, 0, 0.35);\r\n  border-radius: 0.05rem;\r\n  color: $bgColor;\r\n}\r\n</style>\r\n"],"mappings":";;;EAEOA,KAAK,EAAC;AAAO;;uBAAlBC,mBAAA,CAAsC,OAAtCC,UAAsC,EAAAC,gBAAA,CAAhBC,MAAA,CAAAC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}