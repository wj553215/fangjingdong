{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//引入实例\nimport { useRouter } from \"vue-router\";\nimport { post } from '../../utils/request';\nimport { reactive } from \"vue\";\nimport Toast from '../../components/Toast.vue';\nexport default {\n  name: \"Login\",\n  components: {\n    Toast\n  },\n  setup() {\n    // 绑定输入框的值\n    const data = reactive({\n      username: '',\n      password: '',\n      showToast: false,\n      toastmessage: ''\n    });\n    // 获取到路由的节点\n    const router = useRouter();\n    const handleLogin = async () => {\n      try {\n        const result = await post('/api/user/login', {\n          uername: data.username,\n          password: data.password\n        });\n        if (result?.errno === 0) {\n          localStorage.isLogin = true;\n          // 告诉路由登录后从新跳转\n          router.push({\n            name: \"Home\"\n          });\n        } else {\n          data.showToast = true;\n          data.toastmessage = '登录失败';\n        }\n      } catch (e) {\n        alert('请求失败');\n      }\n    };\n    const handleRegisterClick = () => {\n      router.push({\n        name: \"Register\"\n      });\n    };\n    return {\n      handleLogin,\n      handleRegisterClick,\n      data\n    };\n  }\n};","map":{"version":3,"names":["useRouter","post","reactive","Toast","name","components","setup","data","username","password","showToast","toastmessage","router","handleLogin","result","uername","errno","localStorage","isLogin","push","e","alert","handleRegisterClick"],"sources":["D:\\WEB\\project\\jingdong\\src\\views\\login\\Login.vue"],"sourcesContent":["<!-- 登录 -->\r\n<template>\r\n  <div class=\"wrapper\">\r\n    <img class=\"wrapper__img\" src=\"http://www.dell-lee.com/imgs/vue3/user.png\" />\r\n    <div class=\"wrapper__input\">\r\n      <input class=\"wrapper__input__content\" placeholder=\"请输入用户名\" v-model=\"data.username\" />\r\n    </div>\r\n    <div class=\"wrapper__input\">\r\n      <input class=\"wrapper__input__content\" placeholder=\"请输入密码\" type=\"password\" v-model=\"data.password\" />\r\n    </div>\r\n    <div class=\"wrapper__login-button\" @click=\"handleLogin\">登录</div>\r\n    <div class=\"wrapper__login-link\" @click=\"handleRegisterClick\">立即注册</div>\r\n    <Toast v-if=\"data.showToast\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//引入实例\r\nimport { useRouter } from \"vue-router\";\r\nimport {post} from '../../utils/request';\r\nimport { reactive } from \"vue\";\r\nimport Toast from '../../components/Toast.vue';\r\n\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  components:{Toast},\r\n  setup() {\r\n    // 绑定输入框的值\r\n    const data = reactive({\r\n      username: '',\r\n      password: '',\r\n      showToast: false,\r\n      toastmessage:''\r\n    });\r\n    // 获取到路由的节点\r\n    const router = useRouter();\r\n    const handleLogin = async () => {\r\n      try {\r\n        const result = await post('/api/user/login',\r\n          {\r\n            uername: data.username,\r\n            password: data.password,\r\n          })\r\n        if (result?.errno === 0) {\r\n          localStorage.isLogin = true;\r\n          // 告诉路由登录后从新跳转\r\n          router.push({ name: \"Home\" });\r\n        } else {\r\n          data.showToast=true;\r\n          data.toastmessage='登录失败';\r\n        }\r\n      }catch(e){\r\n        alert('请求失败')\r\n      }\r\n    };\r\n    const handleRegisterClick = () => {\r\n      router.push({ name: \"Register\" });\r\n    };\r\n    return { handleLogin, handleRegisterClick, data };\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"../../style/viriables.scss\";\r\n\r\n.wrapper {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n\r\n  &__img {\r\n    display: block;\r\n    margin: 0 auto 0.4rem auto;\r\n    width: 0.66rem;\r\n    height: 0.66rem;\r\n  }\r\n\r\n  &__input {\r\n    box-sizing: border-box;\r\n    height: 0.48rem;\r\n    margin: 0 0.4rem 0.16rem 0.4rem;\r\n    padding: 0 0.16rem;\r\n    background: #f9f9f9 100%;\r\n    border: 1px solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 6px;\r\n\r\n    &__content {\r\n      line-height: 0.48rem;\r\n      border: 0;\r\n      outline: none;\r\n      width: 100%;\r\n      background: none;\r\n      font-size: 0.16rem;\r\n      color: #000000;\r\n\r\n      &::placeholder {\r\n        color: $content-notice-fontcolor;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__login-button {\r\n    margin: 0.32rem 0.4rem 0.16rem 0.4rem;\r\n    line-height: 0.48rem;\r\n    font-size: 0.16rem;\r\n    text-align: center;\r\n    background: #0091ff;\r\n    box-shadow: 0 0.04rem 0.08rem 0 rgba(0, 145, 255, 0.32);\r\n    border-radius: 4px;\r\n    color: #ffff;\r\n  }\r\n\r\n  &__login-link {\r\n    text-align: center;\r\n    font-size: 0.14rem;\r\n    color: $content-notice-fontcolor;\r\n    letter-spacing: 0;\r\n  }\r\n}\r\n</style>"],"mappings":";AAiBA;AACA,SAASA,SAAQ,QAAS,YAAY;AACtC,SAAQC,IAAI,QAAO,qBAAqB;AACxC,SAASC,QAAO,QAAS,KAAK;AAC9B,OAAOC,KAAI,MAAO,4BAA4B;AAG9C,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAC;IAACF;EAAK,CAAC;EAClBG,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,IAAG,GAAIL,QAAQ,CAAC;MACpBM,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAC;IACf,CAAC,CAAC;IACF;IACA,MAAMC,MAAK,GAAIZ,SAAS,EAAE;IAC1B,MAAMa,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,MAAK,GAAI,MAAMb,IAAI,CAAC,iBAAiB,EACzC;UACEc,OAAO,EAAER,IAAI,CAACC,QAAQ;UACtBC,QAAQ,EAAEF,IAAI,CAACE;QACjB,CAAC;QACH,IAAIK,MAAM,EAAEE,KAAI,KAAM,CAAC,EAAE;UACvBC,YAAY,CAACC,OAAM,GAAI,IAAI;UAC3B;UACAN,MAAM,CAACO,IAAI,CAAC;YAAEf,IAAI,EAAE;UAAO,CAAC,CAAC;QAC/B,OAAO;UACLG,IAAI,CAACG,SAAS,GAAC,IAAI;UACnBH,IAAI,CAACI,YAAY,GAAC,MAAM;QAC1B;MACF,CAAC,QAAMS,CAAC,EAAC;QACPC,KAAK,CAAC,MAAM;MACd;IACF,CAAC;IACD,MAAMC,mBAAkB,GAAIA,CAAA,KAAM;MAChCV,MAAM,CAACO,IAAI,CAAC;QAAEf,IAAI,EAAE;MAAW,CAAC,CAAC;IACnC,CAAC;IACD,OAAO;MAAES,WAAW;MAAES,mBAAmB;MAAEf;IAAK,CAAC;EACnD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}