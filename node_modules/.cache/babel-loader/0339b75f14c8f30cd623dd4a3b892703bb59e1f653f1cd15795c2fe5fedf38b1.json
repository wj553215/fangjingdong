{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { post } from \"../../utils/request\";\nimport Toast, { useToastEffect } from \"../../components/Toast\";\nexport default {\n  name: \"Register\",\n  setup() {\n    const router = useRouter();\n    // 绑定输入框的值\n    const data = reactive({\n      username: \"\",\n      password: \"\"\n    });\n    const {\n      toastData,\n      showToast\n    } = useToastEffect();\n    const handleRegister = async () => {\n      try {\n        const result = await post(\"/api/user/login\", {\n          uername: data.username,\n          password: data.password\n        });\n        if (result?.errno === 0) {\n          localStorage.isLogin = true;\n          // 告诉路由登录后从新跳转\n          router.push({\n            name: \"Home\"\n          });\n        } else {\n          showToast(\"注册失败\");\n        }\n      } catch (e) {\n        showToast(\"请求失败\");\n      }\n    };\n    const handleLoginClick = () => {\n      router.push({\n        name: \"Login\"\n      });\n    };\n    return {\n      handleLoginClick,\n      handleRegister,\n      data,\n      toastData\n    };\n  }\n};","map":{"version":3,"names":["reactive","useRouter","post","Toast","useToastEffect","name","setup","router","data","username","password","toastData","showToast","handleRegister","result","uername","errno","localStorage","isLogin","push","e","handleLoginClick"],"sources":["D:\\WEB\\project\\jingdong\\src\\views\\register\\Register.vue"],"sourcesContent":["<!-- 注册 -->\r\n<template>\r\n  <div class=\"wrapper\">\r\n    <img\r\n      class=\"wrapper__img\"\r\n      src=\"http://www.dell-lee.com/imgs/vue3/user.png\"\r\n    />\r\n    <div class=\"wrapper__input\">\r\n      <input class=\"wrapper__input__content\" placeholder=\"请输入手机号码\" />\r\n    </div>\r\n    <div class=\"wrapper__input\">\r\n      <input\r\n        class=\"wrapper__input__content\"\r\n        placeholder=\"请输入密码\"\r\n        type=\"password\"\r\n      />\r\n    </div>\r\n    <div class=\"wrapper__input\">\r\n      <input\r\n        class=\"wrapper__input__content\"\r\n        placeholder=\"确认密码\"\r\n        type=\"password\"\r\n      />\r\n    </div>\r\n    <div class=\"wrapper__register-button\"  @click=\"handleRegister\">注册</div>\r\n    <div class=\"wrapper__register-link\" @click=\"handleLoginClick\">已有账号去登录</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { post } from \"../../utils/request\";\r\nimport Toast, { useToastEffect } from \"../../components/Toast\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  setup() {\r\n    const router = useRouter();\r\n     // 绑定输入框的值\r\n    const data = reactive({ username: \"\", password: \"\" });\r\n    const { toastData, showToast } = useToastEffect();\r\n    const handleRegister=async()=>{\r\n      try {\r\n        const result = await post(\"/api/user/login\", {\r\n          uername: data.username,\r\n          password: data.password,\r\n        });\r\n        if (result?.errno === 0) {\r\n          localStorage.isLogin = true;\r\n          // 告诉路由登录后从新跳转\r\n          router.push({ name: \"Home\" });\r\n        } else {\r\n          showToast(\"注册失败\");\r\n        }\r\n      } catch (e) {\r\n        showToast(\"请求失败\");\r\n      }\r\n    }\r\n    const handleLoginClick=()=>{\r\n      router.push({ name: \"Login\" });\r\n    }\r\n    return{handleLoginClick,handleRegister,data, toastData}\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"../../style/viriables.scss\";\r\n\r\n.wrapper {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n\r\n  &__img {\r\n    display: block;\r\n    margin: 0 auto 0.4rem auto;\r\n    width: 0.66rem;\r\n    height: 0.66rem;\r\n  }\r\n\r\n  &__input {\r\n    box-sizing: border-box;\r\n    height: 0.48rem;\r\n    margin: 0 0.4rem 0.16rem 0.4rem;\r\n    padding: 0 0.16rem;\r\n    background: #f9f9f9 100%;\r\n    border: 1px solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 6px;\r\n\r\n    &__content {\r\n      line-height: 0.48rem;\r\n      border: 0;\r\n      outline: none;\r\n      width: 100%;\r\n      background: none;\r\n      font-size: 0.16rem;\r\n      color: #000000;\r\n\r\n      &::placeholder {\r\n        color: $content-notice-fontcolor;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__register-button {\r\n    margin: 0.32rem 0.4rem 0.16rem 0.4rem;\r\n    line-height: 0.48rem;\r\n    font-size: 0.16rem;\r\n    text-align: center;\r\n    background: #0091ff;\r\n    box-shadow: 0 0.04rem 0.08rem 0 rgba(0, 145, 255, 0.32);\r\n    border-radius: 4px;\r\n    color: #ffff;\r\n  }\r\n\r\n  &__register-link {\r\n    text-align: center;\r\n    font-size: 0.14rem;\r\n    color: $content-notice-fontcolor;\r\n    letter-spacing: 0;\r\n  }\r\n}\r\n</style>"],"mappings":";AA8BA,SAASA,QAAO,QAAS,KAAK;AAC9B,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,IAAG,QAAS,qBAAqB;AAC1C,OAAOC,KAAK,IAAIC,cAAa,QAAS,wBAAwB;AAE9D,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIN,SAAS,EAAE;IACzB;IACD,MAAMO,IAAG,GAAIR,QAAQ,CAAC;MAAES,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;IACrD,MAAM;MAAEC,SAAS;MAAEC;IAAU,IAAIR,cAAc,EAAE;IACjD,MAAMS,cAAc,GAAC,MAAAA,CAAA,KAAS;MAC5B,IAAI;QACF,MAAMC,MAAK,GAAI,MAAMZ,IAAI,CAAC,iBAAiB,EAAE;UAC3Ca,OAAO,EAAEP,IAAI,CAACC,QAAQ;UACtBC,QAAQ,EAAEF,IAAI,CAACE;QACjB,CAAC,CAAC;QACF,IAAII,MAAM,EAAEE,KAAI,KAAM,CAAC,EAAE;UACvBC,YAAY,CAACC,OAAM,GAAI,IAAI;UAC3B;UACAX,MAAM,CAACY,IAAI,CAAC;YAAEd,IAAI,EAAE;UAAO,CAAC,CAAC;QAC/B,OAAO;UACLO,SAAS,CAAC,MAAM,CAAC;QACnB;MACF,EAAE,OAAOQ,CAAC,EAAE;QACVR,SAAS,CAAC,MAAM,CAAC;MACnB;IACF;IACA,MAAMS,gBAAgB,GAACA,CAAA,KAAI;MACzBd,MAAM,CAACY,IAAI,CAAC;QAAEd,IAAI,EAAE;MAAQ,CAAC,CAAC;IAChC;IACA,OAAM;MAACgB,gBAAgB;MAACR,cAAc;MAACL,IAAI;MAAEG;IAAS;EACxD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}