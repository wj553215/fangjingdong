{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-60ddf574\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"docker\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  class: \"docker__title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dockerList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.icon,\n      class: _normalizeClass({\n        docker__item: true,\n        'docker__item--active': index === 0\n      })\n    }, [_createTextVNode(\" router \"), _createElementVNode(\"div\", {\n      class: \"iconfont\",\n      innerHTML: item.icon\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(item.text), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","dockerList","item","index","key","icon","_normalizeClass","docker__item","_createElementVNode","innerHTML","_hoisted_3","_toDisplayString","text"],"sources":["D:\\WEB\\project\\jingdong\\src\\views\\home\\Docker.vue"],"sourcesContent":["<!-- 下面 -->\r\n<template>\r\n  <div class=\"docker\">\r\n    <div v-for=\"(item, index) in dockerList\" :key=\"item.icon\"\r\n      :class=\"{ docker__item: true, 'docker__item--active': index === 0 }\">\r\n      router\r\n      <div class=\"iconfont\" v-html=\"item.icon\"></div>\r\n      <div class=\"docker__title\">{{ item.text }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'Docker',\r\n  setup () {\r\n    const dockerList = [\r\n      { icon: '&#xe674;', text: '首页' },\r\n      { icon: '&#xe63c;', text: '购物车' },\r\n      { icon: '&#xe63e;', text: '订单' },\r\n      { icon: '&#xe660;', text: '我的' }\r\n    ]\r\n    return { dockerList }\r\n  }\r\n}\r\n</script>\r\n<!-- scoped 样式只有本组件生效 -->\r\n<style lang=\"scss\" scoped>\r\n// 颜色引用\r\n@import \"../../style/viriables.scss\";\r\n\r\n.docker {\r\n  display: flex;\r\n  box-sizing: border-box; //以border为基准切块页面\r\n  position: absolute;\r\n  padding: 0 0.18rem;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 0.49rem;\r\n  border-top: 1px solid $content-bgColor;\r\n  color: $content-fontcolor;\r\n\r\n  &__item {\r\n    flex: 1;\r\n    text-align: center;\r\n\r\n    .iconfont {\r\n      margin: 0.07rem 0 0.02rem 0;\r\n      font-size: 0.18rem;\r\n    }\r\n\r\n    &--active {\r\n      color: #1fa4fc;\r\n    }\r\n  }\r\n\r\n  &__title {\r\n    // margin: 0 0 0.06rem 0;\r\n    font-size: 0.2rem;\r\n    transform: scale(0.5, 0.5);\r\n    transform-origin: center top;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;EAEOA,KAAK,EAAC;AAAQ;;;EAKVA,KAAK,EAAC;AAAe;;uBAL9BC,mBAAA,CAOM,OAPNC,UAOM,I,kBANJD,mBAAA,CAKME,SAAA,QAAAC,WAAA,CALuBC,MAAA,CAAAC,UAAU,GAA1BC,IAAI,EAAEC,KAAK;yBAAxBP,mBAAA,CAKM;MALoCQ,GAAG,EAAEF,IAAI,CAACG,IAAI;MACrDV,KAAK,EAAAW,eAAA;QAAAC,YAAA;QAAA,wBAAgDJ,KAAK;MAAA;yBAAU,UAErE,GAAAK,mBAAA,CAA+C;MAA1Cb,KAAK,EAAC,UAAU;MAACc,SAAkB,EAAVP,IAAI,CAACG;yCACnCG,mBAAA,CAAgD,OAAhDE,UAAgD,EAAAC,gBAAA,CAAlBT,IAAI,CAACU,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}