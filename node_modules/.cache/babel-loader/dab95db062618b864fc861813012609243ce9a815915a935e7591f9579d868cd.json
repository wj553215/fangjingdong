{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 引入实例\nimport { reactive, toRefs } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { post } from '../../utils/request';\nimport Toast, { useToastEffect } from '../../components/Toast';\nconst useLoginEffect = showToast => {\n  const router = useRouter();\n  // 绑定输入框的值\n  const data = reactive({\n    username: '',\n    password: ''\n  });\n  const handleLogin = async () => {\n    try {\n      const {\n        username,\n        password\n      } = data;\n      if (username === '' || password === '') {\n        showToast('账号或密码不能为空');\n        localStorage.isLogin = false;\n        return;\n      }\n      const result = await post('/api/user/login', {\n        username: data.username,\n        password: data.password\n      });\n      if (result?.errno === 0) {\n        localStorage.isLogin = true;\n        // 告诉路由登录后从新跳转\n        router.push({\n          name: 'Home'\n        });\n      } else {\n        showToast('登录失败');\n      }\n    } catch (e) {\n      showToast('请求失败');\n    }\n  };\n  const {\n    username,\n    password\n  } = toRefs(data);\n  return {\n    username,\n    password,\n    handleLogin\n  };\n};\nexport default {\n  name: 'Login',\n  components: {\n    Toast\n  },\n  setup() {\n    // 获取到路由的节点\n    const router = useRouter();\n    const {\n      show,\n      toastMessage,\n      showToast\n    } = useToastEffect();\n    const {\n      username,\n      password,\n      handleLogin\n    } = useLoginEffect(showToast);\n    const handleRegisterClick = () => {\n      router.push({\n        name: 'Register'\n      });\n    };\n    return {\n      username,\n      password,\n      toastMessage,\n      show,\n      handleLogin,\n      handleRegisterClick\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","useRouter","post","Toast","useToastEffect","useLoginEffect","showToast","router","data","username","password","handleLogin","localStorage","isLogin","result","errno","push","name","e","components","setup","show","toastMessage","handleRegisterClick"],"sources":["D:\\WEB\\project\\jingdong\\src\\views\\login\\Login.vue"],"sourcesContent":["<!-- 登录 -->\r\n<template>\r\n  <div class=\"wrapper\">\r\n    <img class=\"wrapper__img\" src=\"http://www.dell-lee.com/imgs/vue3/user.png\" />\r\n    <div class=\"wrapper__input\">\r\n      <input class=\"wrapper__input__content\" placeholder=\"请输入用户名\" v-model=\"username\" />\r\n    </div>\r\n    <div class=\"wrapper__input\">\r\n      <input class=\"wrapper__input__content\" placeholder=\"请输入密码\" type=\"password\" v-model=\"password\"\r\n        autocomplete=\"new-password\" />\r\n    </div>\r\n    <div class=\"wrapper__login-button\" @click=\"handleLogin\">登录</div>\r\n    <div class=\"wrapper__login-link\" @click=\"handleRegisterClick\">立即注册</div>\r\n    <Toast v-if=\"show\" :message=\"toastMessage\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入实例\r\nimport { reactive, toRefs } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { post } from '../../utils/request'\r\nimport Toast, { useToastEffect } from '../../components/Toast'\r\n\r\nconst useLoginEffect = (showToast) => {\r\n  const router = useRouter()\r\n  // 绑定输入框的值\r\n  const data = reactive({ username: '', password: '' })\r\n  const handleLogin = async () => {\r\n    try {\r\n      const { username, password } = data\r\n      if (username === '' || password === '') {\r\n        showToast('账号或密码不能为空')\r\n        localStorage.isLogin = false\r\n        return\r\n      }\r\n      const result = await post('/api/user/login', {\r\n        username: data.username,\r\n        password: data.password\r\n      })\r\n      if (result?.errno === 0) {\r\n        localStorage.isLogin = true\r\n        // 告诉路由登录后从新跳转\r\n        router.push({ name: 'Home' })\r\n      } else {\r\n        showToast('登录失败')\r\n      }\r\n    } catch (e) {\r\n      showToast('请求失败')\r\n    }\r\n  }\r\n  const { username, password } = toRefs(data)\r\n  return { username, password, handleLogin }\r\n}\r\n\r\nexport default {\r\n  name: 'Login',\r\n  components: { Toast },\r\n  setup () {\r\n    // 获取到路由的节点\r\n    const router = useRouter()\r\n    const { show, toastMessage, showToast } = useToastEffect()\r\n    const { username, password, handleLogin } = useLoginEffect(showToast)\r\n\r\n    const handleRegisterClick = () => {\r\n      router.push({ name: 'Register' })\r\n    }\r\n    return {\r\n      username,\r\n      password,\r\n      toastMessage,\r\n      show,\r\n      handleLogin,\r\n      handleRegisterClick\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"../../style/viriables.scss\";\r\n\r\n.wrapper {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n\r\n  &__img {\r\n    display: block;\r\n    margin: 0 auto 0.4rem auto;\r\n    width: 0.66rem;\r\n    height: 0.66rem;\r\n  }\r\n\r\n  &__input {\r\n    box-sizing: border-box;\r\n    height: 0.48rem;\r\n    margin: 0 0.4rem 0.16rem 0.4rem;\r\n    padding: 0 0.16rem;\r\n    background: #f9f9f9 100%;\r\n    border: 1rem solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 6rem;\r\n\r\n    &__content {\r\n      // 光标过大解决办法\r\n      // margin-top: .12rem;\r\n      // line-height: .22rem;\r\n      line-height: 0.48rem;\r\n      border: 0;\r\n      outline: none;\r\n      width: 100%;\r\n      background: none;\r\n      font-size: 0.16rem;\r\n      color: #000000;\r\n\r\n      &::placeholder {\r\n        color: $content-notice-fontcolor;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__login-button {\r\n    margin: 0.32rem 0.4rem 0.16rem 0.4rem;\r\n    line-height: 0.48rem;\r\n    font-size: 0.16rem;\r\n    text-align: center;\r\n    background: $btn-bgColor;\r\n    box-shadow: 0 0.04rem 0.08rem 0 rgba(0, 145, 255, 0.32);\r\n    border-radius: 4px;\r\n    color: $bgColor\r\n  }\r\n\r\n  &__login-link {\r\n    text-align: center;\r\n    font-size: 0.14rem;\r\n    color: $content-notice-fontcolor;\r\n    letter-spacing: 0;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAkBA;AACA,SAASA,QAAQ,EAAEC,MAAK,QAAS,KAAI;AACrC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,IAAG,QAAS,qBAAoB;AACzC,OAAOC,KAAK,IAAIC,cAAa,QAAS,wBAAuB;AAE7D,MAAMC,cAAa,GAAKC,SAAS,IAAK;EACpC,MAAMC,MAAK,GAAIN,SAAS,EAAC;EACzB;EACA,MAAMO,IAAG,GAAIT,QAAQ,CAAC;IAAEU,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC;EACpD,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM;QAAEF,QAAQ;QAAEC;MAAS,IAAIF,IAAG;MAClC,IAAIC,QAAO,KAAM,EAAC,IAAKC,QAAO,KAAM,EAAE,EAAE;QACtCJ,SAAS,CAAC,WAAW;QACrBM,YAAY,CAACC,OAAM,GAAI,KAAI;QAC3B;MACF;MACA,MAAMC,MAAK,GAAI,MAAMZ,IAAI,CAAC,iBAAiB,EAAE;QAC3CO,QAAQ,EAAED,IAAI,CAACC,QAAQ;QACvBC,QAAQ,EAAEF,IAAI,CAACE;MACjB,CAAC;MACD,IAAII,MAAM,EAAEC,KAAI,KAAM,CAAC,EAAE;QACvBH,YAAY,CAACC,OAAM,GAAI,IAAG;QAC1B;QACAN,MAAM,CAACS,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC;MAC9B,OAAO;QACLX,SAAS,CAAC,MAAM;MAClB;IACF,EAAE,OAAOY,CAAC,EAAE;MACVZ,SAAS,CAAC,MAAM;IAClB;EACF;EACA,MAAM;IAAEG,QAAQ;IAAEC;EAAS,IAAIV,MAAM,CAACQ,IAAI;EAC1C,OAAO;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAY;AAC3C;AAEA,eAAe;EACbM,IAAI,EAAE,OAAO;EACbE,UAAU,EAAE;IAAEhB;EAAM,CAAC;EACrBiB,KAAIA,CAAA,EAAK;IACP;IACA,MAAMb,MAAK,GAAIN,SAAS,EAAC;IACzB,MAAM;MAAEoB,IAAI;MAAEC,YAAY;MAAEhB;IAAU,IAAIF,cAAc,EAAC;IACzD,MAAM;MAAEK,QAAQ;MAAEC,QAAQ;MAAEC;IAAY,IAAIN,cAAc,CAACC,SAAS;IAEpE,MAAMiB,mBAAkB,GAAIA,CAAA,KAAM;MAChChB,MAAM,CAACS,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAW,CAAC;IAClC;IACA,OAAO;MACLR,QAAQ;MACRC,QAAQ;MACRY,YAAY;MACZD,IAAI;MACJV,WAAW;MACXY;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}